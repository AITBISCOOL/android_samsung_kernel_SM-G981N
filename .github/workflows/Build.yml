name: Android Kernel
on:
  workflow_dispatch:

jobs:

  buildkernel:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
      - name: setup environment 
        run: |
                  sudo apt-get update && sudo apt-get install bc flex git ccache automake lzop bison gperf build-essential zip curl zlib1g-dev zlib1g-dev g++-multilib python3-networkx libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng -y
                  sudo apt-get install git aptitude make gcc -y                
                  sudo apt install python-is-python3 build-essential openssl pip -y
                  # Inease linux swapfile size (works best on SSD)
                  #sudo swapoff -a
                  #sudo dd if=/dev/zero of=/swapfile bs=4G count=8
                  #sudo mkswap /swapfile
                  #sudo swapon /swapfile
                  #free -m
                  # install python 2
                  export PATH=$PATH:$(pwd)/.local/bin
                  sudo apt install python3-virtualenv -y
                  sudo apt install flex
                  sudo apt install openssl -y
                  sudo aptitude install libssl-dev -y
                  # install repo
                  mkdir -p ~/.bin
                  PATH="${pwd}/.bin:${PATH}"
                  curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
                  chmod a+rx ~/.bin/repo

      - name: Set up Python 2
        uses: actions/setup-python@v4
        with:
         python-version: '2.7'

      - name: Install dependencies
        run: |
         python -m pip install --upgrade pip
         pip install -r requirements.txt  
         
      - name: set permissions
        run: sudo chmod +rwx *
      
      - name: Build kernel 
        env:
           TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
           TELEGRAM_CHATID: ${{ secrets.TELEGRAM_CHATID }}
            #echo "ANYKERNEL_SOURCE=$(cat config.env | grep -w "https://github.com/MohamedDevvv/AnyKernel3" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
            #echo "ANYKERNEL_SOURCE_BRANCH=$(cat config.env | grep -w "master" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        run: bash build_kernel.sh

      - name: Release build
        uses: appleboy/telegram-action@master
        with:
         to: ${{ secrets.CHANNEL_ID }}
         token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
         message: Kernel is built!, took ${{ steps.build.outputs.elapsed_time }} seconds.
         document: ${{ steps.build.outputs.outfile }}
